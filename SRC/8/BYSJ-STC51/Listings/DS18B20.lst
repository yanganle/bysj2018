C51 COMPILER V9.56.0.0   DS18B20                                                           10/09/2018 12:38:48 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\DS18B20.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG PR
                    -INT(.\Listings\DS18B20.lst) TABS(2) OBJECT(.\Objects\DS18B20.obj)

line level    source

   1          #include "DS18B20.h"
   2          
   3          void Init_DS18B20(void);
   4          ReadOneChar();
   5          void WriteOneChar(unsigned char dat);
   6          
   7          sbit DQ=P2^2; //数据传输线接单片机的相应的引脚 
   8          unsigned char tempL=0; //设全局变量
   9          unsigned char tempH=0; 
  10          unsigned char xiaoshu1=0;
  11          unsigned char xiaoshu2=0;
  12          unsigned char xiaoshu=0;
  13          unsigned int svalue;//测量到的温度的整数部分
  14          bit  fg=1;        //温度正负标志
  15          unsigned char date;
  16          
  17           /*
  18          ********************************************************************************
  19          ** 函数名称 ： delay(unsigned char i)
  20          ** 函数功能 ： 延时函数   这个延时程序的具体延时时间是time=i*8+10,适用于小于2ms的延时
  21          ********************************************************************************
  22          */
  23          void delay(unsigned int i)
  24          { 
  25   1        while(i--);
  26   1      }
  27          
  28          /*
  29          ********************************************************************************
  30          ** 函数名称 ： Init_DS18B20(void)
  31          ** 函数功能 ： 初始化
  32          ********************************************************************************
  33          */
  34          void Init_DS18B20(void) 
  35          {
  36   1       unsigned char x=0;
  37   1       DQ=1; //DQ先置高 
  38   1       delay(8); //稍延时
  39   1       DQ=0; //发送复位脉冲 
  40   1       delay(80); //延时（>480us) 
  41   1       DQ=1; //拉高数据线 
  42   1       delay(5); //等待（15~60us) 
  43   1       x=DQ; //用X的值来判断初始化有没有成功，18B20存在的话X=0，否则X=1 
  44   1       delay(20); 
  45   1      } 
  46          
  47          
  48          /*
  49          ********************************************************************************
  50          ** 函数名称 ：  ReadOneChar()
  51          ** 函数功能 ： 读一个字节
  52          ********************************************************************************
  53          */
  54          ReadOneChar()  //主机数据线先从高拉至低电平1us以上，再使数据线升为高电平，从而产生读信号
C51 COMPILER V9.56.0.0   DS18B20                                                           10/09/2018 12:38:48 PAGE 2   

  55          {
  56   1        unsigned char i=0; //每个读周期最短的持续时间为60us，各个读周期之间必须有1us以上的高电平恢复期
  57   1        unsigned char dat=0; 
  58   1        for (i=8;i>0;i--) //一个字节有8位 
  59   1        {
  60   2         DQ=1; 
  61   2         delay(1); 
  62   2         DQ=0;
  63   2         dat>>=1; 
  64   2         DQ=1; 
  65   2         if(DQ) 
  66   2         dat|=0x80; 
  67   2         delay(4);
  68   2        } 
  69   1        return(dat);
  70   1      } 
  71          
  72          
  73          /*
  74          ********************************************************************************
  75          ** 函数名称 ： WriteOneChar(unsigned char dat)
  76          ** 函数功能 ： 写一个字节
  77          ********************************************************************************
  78          */
  79          
  80          void WriteOneChar(unsigned char dat) 
  81          { 
  82   1        unsigned char i=0; //数据线从高电平拉至低电平，产生写起始信号。15us之内将所需写的位送到数据线上，
  83   1        for(i=8;i>0;i--) //在15~60us之间对数据线进行采样，如果是高电平就写1，低写0发生。 
  84   1        {
  85   2         DQ=0; //在开始另一个写周期前必须有1us以上的高电平恢复期。 
  86   2         DQ=dat&0x01; 
  87   2         delay(5); 
  88   2         DQ=1; 
  89   2         dat>>=1;
  90   2        } 
  91   1        delay(4);
  92   1      } 
  93          
  94          
  95          /*
  96          ********************************************************************************
  97          ** 函数名称 ： ReadTemperature(void)
  98          ** 函数功能 ： 读温度值（低位放tempL;高位放tempH;）
  99          ********************************************************************************
 100          */
 101          
 102          unsigned int ReadTemperature(u8 *tempstr) 
 103          { 
 104   1        Init_DS18B20(); //初始化
 105   1        WriteOneChar(0xcc); //跳过读序列号的操作
 106   1        WriteOneChar(0x44); //启动温度转换
 107   1        delay(125); //转换需要一点时间，延时 
 108   1        Init_DS18B20(); //初始化
 109   1        WriteOneChar(0xcc); //跳过读序列号的操作 
 110   1        WriteOneChar(0xbe); //读温度寄存器（头两个值分别为温度的低位和高位） 
 111   1        tempL=ReadOneChar(); //读出温度的低位LSB
 112   1        tempH=ReadOneChar(); //读出温度的高位MSB 
 113   1        if(tempH>0x7f)      //最高位为1时温度是负
 114   1        {
 115   2          tempL=~tempL;         //补码转换，取反加一
 116   2          tempH=~tempH+1;       
C51 COMPILER V9.56.0.0   DS18B20                                                           10/09/2018 12:38:48 PAGE 3   

 117   2          fg=0;      //读取温度为负时fg=0
 118   2        }
 119   1        svalue = tempL/16+tempH*16;      //整数部分
 120   1        xiaoshu1 = (tempL&0x0f)*10/16; //小数第一位
 121   1        xiaoshu2 = (tempL&0x0f)*100/16%10;//小数第二位
 122   1        xiaoshu=xiaoshu1*10+xiaoshu2; //小数两位
 123   1        
 124   1        tempstr[0]='0'+(svalue/10);
 125   1        tempstr[1]='0'+(svalue%10);
 126   1        tempstr[2]='.';
 127   1        tempstr[3]='0'+(xiaoshu1%10);
 128   1        tempstr[4]='C';
 129   1        tempstr[5]='\0';
 130   1        
 131   1        return svalue;
 132   1      }
 133          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    417    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
