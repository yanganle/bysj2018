###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         29/Sep/2018  17:09:03 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\Source\SIMxxx.c                  #
#    Command line       =  -f E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zsta #
#                          ck\Samples\SampleApp\CC2530DB\..\..\..\Tools\CC253 #
#                          0DB\f8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func    #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f E:\BYSJ\bysj2018\SRC\11\Zig #
#                          BeePro\Projects\zstack\Samples\SampleApp\CC2530DB\ #
#                          ..\..\..\Tools\CC2530DB\f8wConfig.cfg              #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0x1234                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 E:\BYSJ\bysj2018\SRC\11\Zig #
#                          BeePro\Projects\zstack\Samples\SampleApp\Source\SI #
#                          Mxxx.c -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D  #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -lC E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\EndDeviceEB\List\   #
#                          -lA E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\EndDeviceEB\List\   #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\EndDeviceEB\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zsta #
#                          ck\Samples\SampleApp\CC2530DB\ -I                  #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\Source\ -I           #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB #
#                          \ -I E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zs #
#                          tack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Com #
#                          ponents\hal\include\ -I E:\BYSJ\bysj2018\SRC\11\Zi #
#                          gBeePro\Projects\zstack\Samples\SampleApp\CC2530DB #
#                          \..\..\..\..\..\Components\hal\target\CC2530EB\    #
#                          -I E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zsta #
#                          ck\Samples\SampleApp\CC2530DB\..\..\..\..\..\Compo #
#                          nents\mac\include\ -I E:\BYSJ\bysj2018\SRC\11\ZigB #
#                          eePro\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\Components\mac\high_level\ -I        #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\mac\low_level\srf04\ -I                         #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\mac\low_level\srf04\single_chip\ -I             #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\mt\ -I E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projec #
#                          ts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. #
#                          .\Components\osal\include\ -I                      #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\services\saddr\ -I E:\BYSJ\bysj2018\SRC\11\ZigB #
#                          eePro\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\Components\services\sdata\ -I        #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\stack\af\ -I E:\BYSJ\bysj2018\SRC\11\ZigBeePro\ #
#                          Projects\zstack\Samples\SampleApp\CC2530DB\..\..\. #
#                          .\..\..\Components\stack\nwk\ -I                   #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\stack\sapi\ -I E:\BYSJ\bysj2018\SRC\11\ZigBeePr #
#                          o\Projects\zstack\Samples\SampleApp\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sec\ -I                 #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\stack\sys\ -I E:\BYSJ\bysj2018\SRC\11\ZigBeePro #
#                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\..\ #
#                          ..\..\..\Components\stack\zdo\ -I                  #
#                          E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\zmac\ -I E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. #
#                          \..\Components\zmac\f8w\ -Ohz --require_prototypes #
#    List file          =  E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\EndDeviceEB\List\SIMxxx #
#                          .lst                                               #
#    Object file        =  E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\EndDeviceEB\Obj\SIMxxx. #
#                          r51                                                #
#                                                                             #
#                                                                             #
###############################################################################

E:\BYSJ\bysj2018\SRC\11\ZigBeePro\Projects\zstack\Samples\SampleApp\Source\SIMxxx.c
      1          #include "SIMxxx.h"
      2          #include "MT_UART.h"
      3          #include <string.h>
      4          #include <stdio.h>
      5          
      6          void delay_ms(uint8 Time);//n ms—” ±
      7          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      8          uint8 SIM900_CSQ[4];
   \                     SIM900_CSQ:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
      9          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     10          uint8 *sim900a_check_cmd(uint8 *str)
   \                     sim900a_check_cmd:
     11          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     12              char *strx=NULL;
   \   000005   7800         MOV     R0,#0x0
   \   000007   7900         MOV     R1,#0x0
     13              if(UART1_RX_STA)
   \   000009   90....       MOV     DPTR,#UART1_RX_STA
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   6013         JZ      ??sim900a_check_cmd_0
     14              { 
     15                strx=strstr((const char*)UART1_RX_BUF,(const char*)str);
   \   00000F                ; Setup parameters for call to function strstr
   \   00000F   EA           MOV     A,R2
   \   000010   FC           MOV     R4,A
   \   000011   EB           MOV     A,R3
   \   000012   FD           MOV     R5,A
   \   000013   7A..         MOV     R2,#UART1_RX_BUF & 0xff
   \   000015   7B..         MOV     R3,#(UART1_RX_BUF >> 8) & 0xff
   \   000017   12....       LCALL   ??strstr?relay
   \   00001A   8A..         MOV     ?V0 + 0,R2
   \   00001C   8B..         MOV     ?V0 + 1,R3
   \   00001E   A8..         MOV     R0,?V0 + 0
   \   000020   A9..         MOV     R1,?V0 + 1
     16              } 
     17              return (uint8 *)strx;
   \                     ??sim900a_check_cmd_0:
   \   000022   E8           MOV     A,R0
   \   000023   FA           MOV     R2,A
   \   000024   E9           MOV     A,R1
   \   000025   FB           MOV     R3,A
   \   000026                REQUIRE ?Subroutine0
   \   000026                ; // Fall through to label ?Subroutine0
     18          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     19          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     20          uint8 sim900a_send_cmd(uint8 *cmd,uint8 *ack,uint16 waittime)
   \                     sim900a_send_cmd:
     21          {	
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8C..         MOV     ?V0 + 0,R4
   \   000007   8D..         MOV     ?V0 + 1,R5
   \   000009   740E         MOV     A,#0xe
   \   00000B   12....       LCALL   ?XSTACK_DISP0_8
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   FE           MOV     R6,A
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   FF           MOV     R7,A
     22          	uint8 res=0;
   \   000013   75..00       MOV     ?V0 + 2,#0x0
     23          
     24          	HalUARTWrite(UART1, cmd, sizeof(cmd));
   \   000016                ; Setup parameters for call to function HalUARTWrite
   \   000016   7C02         MOV     R4,#0x2
   \   000018   7D00         MOV     R5,#0x0
   \   00001A   7901         MOV     R1,#0x1
   \   00001C   12....       LCALL   ??HalUARTWrite?relay
     25          	if(ack&&waittime)		
   \   00001F   E5..         MOV     A,?V0 + 0
   \   000021   45..         ORL     A,?V0 + 1
   \   000023   6033         JZ      ??sim900a_send_cmd_0
   \   000025   EE           MOV     A,R6
   \   000026   4F           ORL     A,R7
   \   000027   7020         JNZ     ??sim900a_send_cmd_1
   \   000029   802D         SJMP    ??sim900a_send_cmd_0
     26          	{
     27          		while(--waittime)	
     28          		{
     29          			delay_ms(10);
   \                     ??sim900a_send_cmd_2:
   \   00002B                ; Setup parameters for call to function delay_ms
   \   00002B   790A         MOV     R1,#0xa
   \   00002D   12....       LCALL   ??delay_ms?relay
     30          			if(UART1_RX_STA)
   \   000030   90....       MOV     DPTR,#UART1_RX_STA
   \   000033   E0           MOVX    A,@DPTR
   \   000034   6013         JZ      ??sim900a_send_cmd_1
     31          			{
     32          				if(sim900a_check_cmd(ack))break; 
   \   000036                ; Setup parameters for call to function sim900a_check_cmd
   \   000036   AA..         MOV     R2,?V0 + 0
   \   000038   AB..         MOV     R3,?V0 + 1
   \   00003A   12....       LCALL   ??sim900a_check_cmd?relay
   \   00003D   8B..         MOV     ?V0 + 5,R3
   \   00003F   EA           MOV     A,R2
   \   000040   45..         ORL     A,?V0 + 5
   \   000042   7014         JNZ     ??sim900a_send_cmd_0
     33          				UART1_RX_STA=0;
   \   000044   90....       MOV     DPTR,#UART1_RX_STA
   \   000047   E4           CLR     A
   \   000048   F0           MOVX    @DPTR,A
     34          			} 
     35          		}
   \                     ??sim900a_send_cmd_1:
   \   000049   EE           MOV     A,R6
   \   00004A   24FF         ADD     A,#-0x1
   \   00004C   1E           DEC     R6
   \   00004D   EF           MOV     A,R7
   \   00004E   34FF         ADDC    A,#-0x1
   \   000050   FF           MOV     R7,A
   \   000051   EE           MOV     A,R6
   \   000052   4F           ORL     A,R7
   \   000053   70D6         JNZ     ??sim900a_send_cmd_2
     36          		if(waittime==0)res=1; 
   \   000055   75..01       MOV     ?V0 + 2,#0x1
     37          	}
     38          	return res;
   \                     ??sim900a_send_cmd_0:
   \   000058   A9..         MOV     R1,?V0 + 2
   \   00005A   7F06         MOV     R7,#0x6
   \   00005C   02....       LJMP    ?BANKED_LEAVE_XDATA
     39          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     40          uint8 sim900a_work_test(void)
   \                     sim900a_work_test:
     41          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     42          	if(sim900a_send_cmd((uint8 *)"AT\r\n",(uint8 *)"OK",100))
   \   000005                ; Setup parameters for call to function sim900a_send_cmd
   \   000005   75..64       MOV     ?V0 + 0,#0x64
   \   000008   75..00       MOV     ?V0 + 1,#0x0
   \   00000B   78..         MOV     R0,#?V0 + 0
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000010   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000013   12....       LCALL   ?DEALLOC_XSTACK8
   \   000016   E9           MOV     A,R1
   \   000017   6013         JZ      ??sim900a_work_test_0
     43          	{
     44          		if(sim900a_send_cmd((uint8 *)"AT\r\n",(uint8 *)"OK",100))return SIM_COMMUNTION_ERR;	//Õ®–≈≤ª…œ
   \   000019                ; Setup parameters for call to function sim900a_send_cmd
   \   000019   78..         MOV     R0,#?V0 + 0
   \   00001B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00001E   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000021   12....       LCALL   ?DEALLOC_XSTACK8
   \   000024   E9           MOV     A,R1
   \   000025   6005         JZ      ??sim900a_work_test_0
   \   000027   79FF         MOV     R1,#-0x1
   \   000029   02....       LJMP    ??sim900a_work_test_1 & 0xFFFF
     45          	}		
     46          	if(sim900a_send_cmd((uint8 *)"AT+CPIN?\r\n",(uint8 *)"READY",400))return SIM_CPIN_ERR;	//√ª”–SIMø®
   \                     ??sim900a_work_test_0:
   \   00002C                ; Setup parameters for call to function sim900a_send_cmd
   \   00002C   75..90       MOV     ?V0 + 0,#-0x70
   \   00002F   75..01       MOV     ?V0 + 1,#0x1
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000037   7C..         MOV     R4,#`?<Constant "READY">` & 0xff
   \   000039   7D..         MOV     R5,#(`?<Constant "READY">` >> 8) & 0xff
   \   00003B   7A..         MOV     R2,#`?<Constant "AT+CPIN?\\r\\n">` & 0xff
   \   00003D   7B..         MOV     R3,#(`?<Constant "AT+CPIN?\\r\\n">` >> 8) & 0xff
   \   00003F   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000042   12....       LCALL   ?DEALLOC_XSTACK8
   \   000045   E9           MOV     A,R1
   \   000046   6004         JZ      ??sim900a_work_test_2
   \   000048   79FE         MOV     R1,#-0x2
   \   00004A   8062         SJMP    ??sim900a_work_test_1
     47          	if(sim900a_send_cmd((uint8 *)"AT+CREG?\r\n",(uint8 *)"0,1",400))
   \                     ??sim900a_work_test_2:
   \   00004C                ; Setup parameters for call to function sim900a_send_cmd
   \   00004C   78..         MOV     R0,#?V0 + 0
   \   00004E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000051   7C..         MOV     R4,#`?<Constant "0,1">` & 0xff
   \   000053   7D..         MOV     R5,#(`?<Constant "0,1">` >> 8) & 0xff
   \   000055   7A..         MOV     R2,#`?<Constant "AT+CREG?\\r\\n">` & 0xff
   \   000057   7B..         MOV     R3,#(`?<Constant "AT+CREG?\\r\\n">` >> 8) & 0xff
   \   000059   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   00005C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00005F   E9           MOV     A,R1
   \   000060   604A         JZ      ??sim900a_work_test_3
     48          	{
     49          		if(strstr((const char*)UART1_RX_BUF,"0,5")==NULL)
   \   000062                ; Setup parameters for call to function strstr
   \   000062   7C..         MOV     R4,#`?<Constant "0,5">` & 0xff
   \   000064   7D..         MOV     R5,#(`?<Constant "0,5">` >> 8) & 0xff
   \   000066   7A..         MOV     R2,#UART1_RX_BUF & 0xff
   \   000068   7B..         MOV     R3,#(UART1_RX_BUF >> 8) & 0xff
   \   00006A   12....       LCALL   ??strstr?relay
   \   00006D   8B..         MOV     ?V0 + 1,R3
   \   00006F   EA           MOV     A,R2
   \   000070   45..         ORL     A,?V0 + 1
   \   000072   7038         JNZ     ??sim900a_work_test_3
     50          		{
     51          			 if(!sim900a_send_cmd((uint8 *)"AT+CSQ\r\n",(uint8 *)"OK",200))	
   \   000074                ; Setup parameters for call to function sim900a_send_cmd
   \   000074   75..C8       MOV     ?V0 + 0,#-0x38
   \   000077   75..00       MOV     ?V0 + 1,#0x0
   \   00007A   78..         MOV     R0,#?V0 + 0
   \   00007C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00007F   7C..         MOV     R4,#`?<Constant "OK">` & 0xff
   \   000081   7D..         MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
   \   000083   7A..         MOV     R2,#`?<Constant "AT+CSQ\\r\\n">` & 0xff
   \   000085   7B..         MOV     R3,#(`?<Constant "AT+CSQ\\r\\n">` >> 8) & 0xff
   \   000087   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   00008A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00008D   E9           MOV     A,R1
   \   00008E   7018         JNZ     ??sim900a_work_test_4
     52          			 {
     53          				memcpy(SIM900_CSQ,UART1_RX_BUF+15,2);
   \   000090                ; Setup parameters for call to function memcpy
   \   000090   75..02       MOV     ?V0 + 0,#0x2
   \   000093   78..         MOV     R0,#?V0 + 0
   \   000095   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000098   7C..         MOV     R4,#(UART1_RX_BUF + 15) & 0xff
   \   00009A   7D..         MOV     R5,#((UART1_RX_BUF + 15) >> 8) & 0xff
   \   00009C   7A..         MOV     R2,#SIM900_CSQ & 0xff
   \   00009E   7B..         MOV     R3,#(SIM900_CSQ >> 8) & 0xff
   \   0000A0   12....       LCALL   ??memcpy?relay
   \   0000A3   7402         MOV     A,#0x2
   \   0000A5   12....       LCALL   ?DEALLOC_XSTACK8
     54          			 }
     55          			 return SIM_CREG_FAIL;	//µ»¥˝∏Ω◊≈µΩÕ¯¬Á
   \                     ??sim900a_work_test_4:
   \   0000A8   79FD         MOV     R1,#-0x3
   \   0000AA   8002         SJMP    ??sim900a_work_test_1
     56          		}
     57          	}
     58          	return SIM_OK;
   \                     ??sim900a_work_test_3:
   \   0000AC   7900         MOV     R1,#0x0
   \                     ??sim900a_work_test_1:
   \   0000AE   02....       LJMP    ?Subroutine0 & 0xFFFF
     59          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7C..         MOV     R4,#`?<Constant "OK">` & 0xff
   \   000002   7D..         MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
   \   000004   7A..         MOV     R2,#`?<Constant "AT\\r\\n">` & 0xff
   \   000006   7B..         MOV     R3,#(`?<Constant "AT\\r\\n">` >> 8) & 0xff
   \   000008                REQUIRE ??Subroutine2_0
   \   000008                ; // Fall through to label ??Subroutine2_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine2_0:
   \   000000   12....       LCALL   ??sim900a_send_cmd?relay
   \   000003   7402         MOV     A,#0x2
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     60          uint8 sim900a_send_chmessage_shan(uint8 *number,uint8 *content)
   \                     sim900a_send_chmessage_shan:
     61          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 60
   \   000005   74C4         MOV     A,#-0x3c
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EC           MOV     A,R4
   \   00000B   FE           MOV     R6,A
   \   00000C   ED           MOV     A,R5
   \   00000D   FF           MOV     R7,A
     62          	uint8 cmd[60];
     63          	sprintf((char*)cmd,"AT+CMGS=\"%s\"\r\n",number);
   \   00000E                ; Setup parameters for call to function sprintf
   \   00000E   8A..         MOV     ?V0 + 0,R2
   \   000010   8B..         MOV     ?V0 + 1,R3
   \   000012   78..         MOV     R0,#?V0 + 0
   \   000014   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000017   7C..         MOV     R4,#`?<Constant "AT+CMGS=\\"%s\\"\\r\\n">` & 0xff
   \   000019   7D..         MOV     R5,#(`?<Constant "AT+CMGS=\\"%s\\"\\r\\n">` >> 8) & 0xff
   \   00001B   7402         MOV     A,#0x2
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   AA82         MOV     R2,DPL
   \   000022   AB83         MOV     R3,DPH
   \   000024   12....       LCALL   ??sprintf?relay
   \   000027   7402         MOV     A,#0x2
   \   000029   12....       LCALL   ?DEALLOC_XSTACK8
     64          	if(sim900a_send_cmd((uint8 *)"AT+CMGF=1\r\n",(uint8 *)"OK",200))	return SIM_CMGF_ERR;
   \   00002C                ; Setup parameters for call to function sim900a_send_cmd
   \   00002C   75..C8       MOV     ?V0 + 0,#-0x38
   \   00002F   75..00       MOV     ?V0 + 1,#0x0
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000037   7C..         MOV     R4,#`?<Constant "OK">` & 0xff
   \   000039   7D..         MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
   \   00003B   7A..         MOV     R2,#`?<Constant "AT+CMGF=1\\r\\n">` & 0xff
   \   00003D   7B..         MOV     R3,#(`?<Constant "AT+CMGF=1\\r\\n">` >> 8) & 0xff
   \   00003F   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   000042   12....       LCALL   ?DEALLOC_XSTACK8
   \   000045   E9           MOV     A,R1
   \   000046   6005         JZ      ??sim900a_send_chmessage_shan_0
   \   000048   79FA         MOV     R1,#-0x6
   \   00004A   02....       LJMP    ??sim900a_send_chmessage_shan_1 & 0xFFFF
     65          	if(sim900a_send_cmd((uint8 *)"AT+CSCS=\"UCS2\"\r\n",(uint8 *)"OK",200))	return SIM_CSCS_ERR;
   \                     ??sim900a_send_chmessage_shan_0:
   \   00004D                ; Setup parameters for call to function sim900a_send_cmd
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000052   7C..         MOV     R4,#`?<Constant "OK">` & 0xff
   \   000054   7D..         MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
   \   000056   7A..         MOV     R2,#`?<Constant "AT+CSCS=\\"UCS2\\"\\r\\n">` & 0xff
   \   000058   7B..         MOV     R3,#(`?<Constant "AT+CSCS=\\"UCS2\\"\\r\\n">` >> 8) & 0xff
   \   00005A   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   00005D   12....       LCALL   ?DEALLOC_XSTACK8
   \   000060   E9           MOV     A,R1
   \   000061   6005         JZ      ??sim900a_send_chmessage_shan_2
   \   000063   79F9         MOV     R1,#-0x7
   \   000065   02....       LJMP    ??sim900a_send_chmessage_shan_1 & 0xFFFF
     66          	if(sim900a_send_cmd((uint8 *)"AT+CSCA?\r\n",(uint8 *)"OK",200))	return SIM_CSCA_ERR;
   \                     ??sim900a_send_chmessage_shan_2:
   \   000068                ; Setup parameters for call to function sim900a_send_cmd
   \   000068   78..         MOV     R0,#?V0 + 0
   \   00006A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006D   7C..         MOV     R4,#`?<Constant "OK">` & 0xff
   \   00006F   7D..         MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
   \   000071   7A..         MOV     R2,#`?<Constant "AT+CSCA?\\r\\n">` & 0xff
   \   000073   7B..         MOV     R3,#(`?<Constant "AT+CSCA?\\r\\n">` >> 8) & 0xff
   \   000075   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000078   12....       LCALL   ?DEALLOC_XSTACK8
   \   00007B   E9           MOV     A,R1
   \   00007C   6005         JZ      ??sim900a_send_chmessage_shan_3
   \   00007E   79F8         MOV     R1,#-0x8
   \   000080   02....       LJMP    ??sim900a_send_chmessage_shan_1 & 0xFFFF
     67          	if(sim900a_send_cmd((uint8 *)"AT+CSMP=17,167,0,24\r\n",(uint8 *)"OK",200))	return SIM_CSMP_ERR;
   \                     ??sim900a_send_chmessage_shan_3:
   \   000083                ; Setup parameters for call to function sim900a_send_cmd
   \   000083   78..         MOV     R0,#?V0 + 0
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000088   7C..         MOV     R4,#`?<Constant "OK">` & 0xff
   \   00008A   7D..         MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
   \   00008C   7A..         MOV     R2,#`?<Constant "AT+CSMP=17,167,0,24\\r\\n">` & 0xff
   \   00008E   7B..         MOV     R3,#(`?<Constant "AT+CSMP=17,167,0,24\\r\\n">` >> 8) & 0xff
   \   000090   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000093   12....       LCALL   ?DEALLOC_XSTACK8
   \   000096   E9           MOV     A,R1
   \   000097   6004         JZ      ??sim900a_send_chmessage_shan_4
   \   000099   79F7         MOV     R1,#-0x9
   \   00009B   806C         SJMP    ??sim900a_send_chmessage_shan_1
     68          	if(sim900a_send_cmd(cmd,(uint8 *)">",200)) return SIM_CMGS_ERR;
   \                     ??sim900a_send_chmessage_shan_4:
   \   00009D                ; Setup parameters for call to function sim900a_send_cmd
   \   00009D   78..         MOV     R0,#?V0 + 0
   \   00009F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A2   7C..         MOV     R4,#`?<Constant ">">` & 0xff
   \   0000A4   7D..         MOV     R5,#(`?<Constant ">">` >> 8) & 0xff
   \   0000A6   7402         MOV     A,#0x2
   \   0000A8   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AB   AA82         MOV     R2,DPL
   \   0000AD   AB83         MOV     R3,DPH
   \   0000AF   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   0000B2   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000B5   E9           MOV     A,R1
   \   0000B6   6004         JZ      ??sim900a_send_chmessage_shan_5
   \   0000B8   79F6         MOV     R1,#-0xa
   \   0000BA   804D         SJMP    ??sim900a_send_chmessage_shan_1
     69          	sim900a_send_cmd(content,"",0);
   \                     ??sim900a_send_chmessage_shan_5:
   \   0000BC                ; Setup parameters for call to function sim900a_send_cmd
   \   0000BC   E4           CLR     A
   \   0000BD   F5..         MOV     ?V0 + 0,A
   \   0000BF   78..         MOV     R0,#?V0 + 0
   \   0000C1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C4   7C..         MOV     R4,#`?<Constant "">` & 0xff
   \   0000C6   7D..         MOV     R5,#(`?<Constant "">` >> 8) & 0xff
   \   0000C8   EE           MOV     A,R6
   \   0000C9   FA           MOV     R2,A
   \   0000CA   EF           MOV     A,R7
   \   0000CB   FB           MOV     R3,A
   \   0000CC   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   0000CF   12....       LCALL   ?DEALLOC_XSTACK8
     70          	cmd[0]=0x1a;cmd[1]=0;
   \   0000D2   85..82       MOV     DPL,?XSP + 0
   \   0000D5   85..83       MOV     DPH,?XSP + 1
   \   0000D8   741A         MOV     A,#0x1a
   \   0000DA   F0           MOVX    @DPTR,A
   \   0000DB   7401         MOV     A,#0x1
   \   0000DD   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E0   E4           CLR     A
   \   0000E1   F0           MOVX    @DPTR,A
     71          	if(sim900a_send_cmd(cmd,(uint8 *)"+CMGS:",2000)) return SIM_CMGS_SEND_FAIL;
   \   0000E2                ; Setup parameters for call to function sim900a_send_cmd
   \   0000E2   75..D0       MOV     ?V0 + 0,#-0x30
   \   0000E5   75..07       MOV     ?V0 + 1,#0x7
   \   0000E8   78..         MOV     R0,#?V0 + 0
   \   0000EA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000ED   7C..         MOV     R4,#`?<Constant "+CMGS:">` & 0xff
   \   0000EF   7D..         MOV     R5,#(`?<Constant "+CMGS:">` >> 8) & 0xff
   \   0000F1   7402         MOV     A,#0x2
   \   0000F3   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F6   AA82         MOV     R2,DPL
   \   0000F8   AB83         MOV     R3,DPH
   \   0000FA   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   0000FD   12....       LCALL   ?DEALLOC_XSTACK8
   \   000100   E9           MOV     A,R1
   \   000101   6004         JZ      ??sim900a_send_chmessage_shan_6
   \   000103   79F5         MOV     R1,#-0xb
   \   000105   8002         SJMP    ??sim900a_send_chmessage_shan_1
     72          	return SIM_OK;
   \                     ??sim900a_send_chmessage_shan_6:
   \   000107   7900         MOV     R1,#0x0
   \                     ??sim900a_send_chmessage_shan_1:
   \   000109   743C         MOV     A,#0x3c
   \   00010B   12....       LCALL   ?DEALLOC_XSTACK8
   \   00010E   02....       LJMP    ?Subroutine0 & 0xFFFF
     73          }
     74          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     75          void delay_ms(uint8 Time)//n ms—” ±
   \                     delay_ms:
     76          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
     77            uint8 i;
     78            while(Time--)
   \                     ??delay_ms_0:
   \   000007   8F..         MOV     ?V0 + 0,R7
   \   000009   74FF         MOV     A,#-0x1
   \   00000B   25..         ADD     A,?V0 + 0
   \   00000D   1F           DEC     R7
   \   00000E   04           INC     A
   \   00000F   600F         JZ      ??delay_ms_1
     79            {
     80              for(i=0;i<100;i++)
   \   000011   7E64         MOV     R6,#0x64
     81                MicroWait(10);
   \                     ??delay_ms_2:
   \   000013                ; Setup parameters for call to function Onboard_wait
   \   000013   7A0A         MOV     R2,#0xa
   \   000015   7B00         MOV     R3,#0x0
   \   000017   12....       LCALL   ??Onboard_wait?relay
   \   00001A   1E           DEC     R6
   \   00001B   EE           MOV     A,R6
   \   00001C   60E9         JZ      ??delay_ms_0
   \   00001E   80F3         SJMP    ??delay_ms_2
     82            }
     83          }
   \                     ??delay_ms_1:
   \   000020   7F01         MOV     R7,#0x1
   \   000022   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??sim900a_check_cmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    sim900a_check_cmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??sim900a_send_cmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    sim900a_send_cmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??sim900a_work_test?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    sim900a_work_test

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??sim900a_send_chmessage_shan?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    sim900a_send_chmessage_shan

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??delay_ms?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    delay_ms

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT\\r\\n">`:
   \   000000   41540D0A     DB "AT\015\012"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "OK">`:
   \   000000   4F4B00       DB "OK"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CPIN?\\r\\n">`:
   \   000000   41542B43     DB "AT+CPIN?\015\012"
   \            50494E3F
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "READY">`:
   \   000000   52454144     DB "READY"
   \            5900    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CREG?\\r\\n">`:
   \   000000   41542B43     DB "AT+CREG?\015\012"
   \            5245473F
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "0,1">`:
   \   000000   302C3100     DB "0,1"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "0,5">`:
   \   000000   302C3500     DB "0,5"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CSQ\\r\\n">`:
   \   000000   41542B43     DB "AT+CSQ\015\012"
   \            53510D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CMGS=\\"%s\\"\\r\\n">`:
   \   000000   41542B43     DB "AT+CMGS=\"%s\"\015\012"
   \            4D47533D
   \            22257322
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CMGF=1\\r\\n">`:
   \   000000   41542B43     DB "AT+CMGF=1\015\012"
   \            4D47463D
   \            310D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CSCS=\\"UCS2\\"\\r\\n">`:
   \   000000   41542B43     DB "AT+CSCS=\"UCS2\"\015\012"
   \            5343533D
   \            22554353
   \            32220D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CSCA?\\r\\n">`:
   \   000000   41542B43     DB "AT+CSCA?\015\012"
   \            5343413F
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CSMP=17,167,0,24\\r\\n">`:
   \   000000   41542B43     DB "AT+CSMP=17,167,0,24\015\012"
   \            534D503D
   \            31372C31
   \            36372C30
   \            2C32340D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ">">`:
   \   000000   3E00         DB ">"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "+CMGS:">`:
   \   000000   2B434D47     DB "+CMGS:"
   \            533A00  

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     delay_ms                        0      0     23
       -> Onboard_wait               0      0     18
     sim900a_check_cmd               0      0     24
       -> strstr                     0      0     20
     sim900a_send_chmessage_shan     0      0     72
       -> sprintf                    0      0    144
       -> sim900a_send_cmd           0      0    144
       -> sim900a_send_cmd           0      0    144
       -> sim900a_send_cmd           0      0    144
       -> sim900a_send_cmd           0      0    144
       -> sim900a_send_cmd           0      0    144
       -> sim900a_send_cmd           0      0    144
       -> sim900a_send_cmd           0      0    144
     sim900a_send_cmd                0      0     86
       -> HalUARTWrite               0      0     28
       -> delay_ms                   0      0     28
       -> sim900a_check_cmd          0      0     28
     sim900a_work_test               0      0     12
       -> sim900a_send_cmd           0      0     24
       -> sim900a_send_cmd           0      0     24
       -> sim900a_send_cmd           0      0     24
       -> sim900a_send_cmd           0      0     24
       -> strstr                     0      0     20
       -> sim900a_send_cmd           0      0     24
       -> memcpy                     0      0     24


   Segment part sizes:

     Function/Label                        Bytes
     --------------                        -----
     SIM900_CSQ                               4
     sim900a_check_cmd                       38
     ?Subroutine0                             5
     sim900a_send_cmd                        95
     sim900a_work_test                      177
     ?Subroutine1                             8
     ??Subroutine2_0                          6
     sim900a_send_chmessage_shan            273
     delay_ms                                37
     ??sim900a_check_cmd?relay                6
     ??sim900a_send_cmd?relay                 6
     ??sim900a_work_test?relay                6
     ??sim900a_send_chmessage_shan?relay      6
     ??delay_ms?relay                         6
     ?<Constant "AT\r\n">                     5
     ?<Constant "OK">                         3
     ?<Constant "AT+CPIN?\r\n">              11
     ?<Constant "READY">                      6
     ?<Constant "AT+CREG?\r\n">              11
     ?<Constant "0,1">                        4
     ?<Constant "0,5">                        4
     ?<Constant "AT+CSQ\r\n">                 9
     ?<Constant "AT+CMGS=\"%s\"\r\n">        15
     ?<Constant "AT+CMGF=1\r\n">             12
     ?<Constant "AT+CSCS=\"UCS2\"\r\n">      17
     ?<Constant "AT+CSCA?\r\n">              11
     ?<Constant "AT+CSMP=17,167,0,24\r\n">   22
     ?<Constant ">">                          2
     ?<Constant "">                           1
     ?<Constant "+CMGS:">                     7

 
 639 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
 140 bytes in segment XDATA_ROM_C
   4 bytes in segment XDATA_Z
 
 669 bytes of CODE  memory
 140 bytes of CONST memory
   4 bytes of XDATA memory

Errors: none
Warnings: none
