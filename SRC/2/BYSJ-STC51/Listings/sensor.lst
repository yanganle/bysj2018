C51 COMPILER V9.56.0.0   SENSOR                                                            09/11/2018 20:00:58 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SENSOR
OBJECT MODULE PLACED IN .\Objects\sensor.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE src\sensor.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc
                    -) DEBUG PRINT(.\Listings\sensor.lst) TABS(2) OBJECT(.\Objects\sensor.obj)

line level    source

   1          #include  "sensor.h"
   2          
   3          #define   CHANNEL   3
   4          #define   Cal_MODE  0 //每次测量只读1次ADC.
   5          
   6          u16 Bandgap;
   7          u16 value_old;
   8          u32 value = 1;
   9          unsigned long caltmp;
  10          float Curr_value;
  11          float vertical,horizontal;
  12          
  13          // 描述: 查询法读一次ADC结果.
  14          // 参数: channel: 选择要转换的ADC.
  15          u16 Get_ADC10bitResult(u8 channel)  //channel = 0~7
  16          {
  17   1        ADC_RES = 0;
*** ERROR C202 IN LINE 17 OF src\sensor.c: 'ADC_RES': undefined identifier
  18   1        ADC_RESL = 0;
*** ERROR C202 IN LINE 18 OF src\sensor.c: 'ADC_RESL': undefined identifier
  19   1      
  20   1        ADC_CONTR = (ADC_CONTR & 0xe0) | 0x08 | channel;  //start the ADC
*** ERROR C202 IN LINE 20 OF src\sensor.c: 'ADC_CONTR': undefined identifier
  21   1        NOP(4);
  22   1      
  23   1        while((ADC_CONTR & 0x10) == 0)  ; //wait for ADC finish
  24   1        ADC_CONTR &= ~0x10;   //清除ADC结束标志
  25   1        return  (((u16)ADC_RES << 2) | (ADC_RESL & 3));
  26   1      }
  27          
  28          void ADC_Init(void)
  29          {
  30   1        P1M1 |= (1<<CHANNEL);   // 把ADC口设置为高阻输入
  31   1        P1M0 &= ~(1<<CHANNEL);
  32   1        P1ASF |= (1<<CHANNEL);    //P1.2做ADC 
  33   1        ADC_CONTR = 0xE0; //90T, ADC power on
  34   1        
  35   1      }
  36          
  37          float get_ADC1_value(void)
  38          { 
  39   1            //=================== 只读1次ADC, 10bit ADC. ====================
  40   1              P1ASF = 0;
  41   1              Get_ADC10bitResult(0);  //改变P1ASF后先读一次并丢弃结果, 让内部的采样电容的电压等于输入值.
  42   1              Bandgap = Get_ADC10bitResult(0);  //读内部基准ADC, P1ASF=0, 读0通道
  43   1              P1ASF = 1<<CHANNEL;
  44   1              value_old = Get_ADC10bitResult(CHANNEL);  //读外部电压ADC
  45   1              value =value_old;
  46   1          
  47   1                  
  48   1            caltmp = value;
  49   1            caltmp = (caltmp << 5) + value;           //caltmp = value * 33
  50   1            caltmp = (caltmp << 3) + (caltmp << 1);     //caltmp = caltmp * 10
  51   1            value = caltmp >> 10;                   //value = caltmp / 2^n 1024 
C51 COMPILER V9.56.0.0   SENSOR                                                            09/11/2018 20:00:58 PAGE 2   

  52   1            Curr_value =  (float)value/100;
  53   1          //  Curr_value = (float)(Curr_value*400/(5+(float)(2000/2.08)));
  54   1            vertical = Curr_value;
  55   1            //printf("The vertical is = %.2f \n",Curr_value);
  56   1            //printf("The vertical is = %.2f KG\n",Curr_value);
  57   1            return vertical;
  58   1      }
  59          
  60          
  61          float get_ADC0_value(void)
  62          { 
  63   1            //=================== 只读1次ADC, 10bit ADC. ====================   
  64   1              P1ASF = 0;
  65   1              Get_ADC10bitResult(0);  //改变P1ASF后先读一次并丢弃结果, 让内部的采样电容的电压等于输入值.
  66   1              Bandgap = Get_ADC10bitResult(0);  //读内部基准ADC, P1ASF=0, 读0通道
  67   1              P1ASF = 1<<CHANNEL;
  68   1              value_old = Get_ADC10bitResult(2);  //读外部电压ADC
  69   1              value =value_old;   
  70   1            caltmp = value;
  71   1            caltmp = (caltmp << 5) + value;           //caltmp = value * 33
  72   1            caltmp = (caltmp << 3) + (caltmp << 1);     //caltmp = caltmp * 10
  73   1            value = caltmp >> 10;                   //value = caltmp / 2^n 1024 
  74   1            Curr_value =  (float)value/100;
  75   1            horizontal = Curr_value;
  76   1      //      printf("The horizontal is = %.2f \n",horizontal);
  77   1            return horizontal;
  78   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  3 ERROR(S)
