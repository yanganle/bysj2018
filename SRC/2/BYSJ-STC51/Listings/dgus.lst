C51 COMPILER V9.56.0.0   DGUS                                                              09/03/2018 23:26:20 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DGUS
OBJECT MODULE PLACED IN .\Objects\dgus.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE src\dgus.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) 
                    -DEBUG PRINT(.\Listings\dgus.lst) TABS(2) OBJECT(.\Objects\dgus.obj)

line level    source

   1          
   2          
   3          /******************************
   4          ** @time；2017/11/7 10:53:15
   5          ** @Author: mantisAlone
   6          ** @email: gxd@cyb-bot.com
   7          ** @brief: 串口屏接口
   8          *******************************/ 
   9          
  10          
  11          
  12          #include "dgus.h"
  13          
  14          
  15          dgusReg dgusRx[DGUS_MAX_READ_LENGTH]; 
  16          
  17          void sentHead (void)
  18          {
  19   1        
  20   1        dgusSentOneByte(HEADH);
  21   1        dgusSentOneByte(HEADL);
  22   1      }
  23          
  24          void dgusWrite(uchar addr,ushort myData)
  25          {
  26   1      //  uchar temp[3];
  27   1        sentHead();
  28   1        dgusSentOneByte(4);
  29   1      //  temp[0] = CMD_WRITE_REG;
  30   1      //  temp[1] = addr;
  31   1      //  temp[2] = myData
  32   1        dgusSentOneByte(CMD_WRITE_REG);
  33   1        dgusSentOneByte(addr);
  34   1        dgusSentOneByte(myData<<8);
  35   1        dgusSentOneByte(myData);
  36   1        
  37   1        //dgusSentOneByte(usMBCRC16(temp,3)>>8);
  38   1        //dgusSentOneByte(usMBCRC16(temp,3));
  39   1        
  40   1      }
  41          
  42          void dgusReadNbyte(uchar addr,uchar length)
  43          {
  44   1        //uchar temp[3];
  45   1        sentHead();
  46   1        dgusSentOneByte(5);
  47   1        //temp[0] = CMD_WRITE_REG;
  48   1        //temp[1] = addr;
  49   1        //temp[2] = length;
  50   1        dgusSentOneByte(CMD_READ_REG);
  51   1        dgusSentOneByte(addr);
  52   1        dgusSentOneByte(length);
  53   1        
  54   1        //dgusSentOneByte(usMBCRC16(temp,3)>>8);
C51 COMPILER V9.56.0.0   DGUS                                                              09/03/2018 23:26:20 PAGE 2   

  55   1      //  dgusSentOneByte(usMBCRC16(temp,3)); 
  56   1      }
  57          
  58          void dgusWriteVar(ushort varAddr,ushort varData){
  59   1        uchar temp[7],i;
  60   1        //ushort xor;
  61   1        sentHead();
  62   1        dgusSentOneByte(5);
  63   1        temp[0] = CMD_WIRTE_VAR;
  64   1        temp[1] = varAddr>>8;
  65   1        temp[2] = varAddr;
  66   1        temp[3] = varData>>8;
  67   1        temp[4] = varData;
  68   1      //  xor = usMBCRC16(temp,5);
  69   1      //  temp[5] = xor>>8;
  70   1      //  temp[6] = xor;
  71   1        
  72   1        for(i = 0;i< 5;i++)
  73   1        {
  74   2          dgusSentOneByte(temp[i]);
  75   2        } 
  76   1      }
  77          
  78          void dgusReadVar(ushort varAddr,uchar length){
  79   1        uchar temp[6],i;
  80   1        //ushort xor;
  81   1        sentHead();
  82   1        dgusSentOneByte(6);
  83   1        temp[0] = CMD_READ_VAR;
  84   1        temp[1] = varAddr>>8;
  85   1        temp[2] = varAddr;
  86   1        temp[3] = length;
  87   1      //  xor = usMBCRC16(temp,4);
  88   1      //  temp[4] = xor>>8;
  89   1      //  temp[5] = xor;
  90   1        
  91   1        for(i = 0;i< 4;i++)
  92   1        {
  93   2          dgusSentOneByte(temp[i]);
  94   2        } 
  95   1      }
  96          
  97          void dgusDrawCurve(uchar mode,ushort* chData)
  98          {
  99   1        uchar temp[20],i,len = 0;
 100   1      //  ushort xor;
 101   1        sentHead();
 102   1        temp[0] = CMD_CURVE_BUFFER;
 103   1        temp[1] = mode;
 104   1        
 105   1        for(i = 0;i < 8;i++){
 106   2          if((mode>>i) & 0x01){
 107   3            len++;
 108   3            temp[1+len] = chData[i]>>8;
 109   3            len++;
 110   3            temp[1+len] = chData[i];
 111   3          }
 112   2        }
 113   1        //xor = usMBCRC16(temp,len+2);
 114   1        //temp[len+2] = xor>>8;
 115   1        //temp[len+3] = xor;
 116   1        
C51 COMPILER V9.56.0.0   DGUS                                                              09/03/2018 23:26:20 PAGE 3   

 117   1        
 118   1        //dgusSentOneByte(len+4);
 119   1      //for(i = 0;i< (len+4);i++)
 120   1        //{
 121   1      ///   dgusSentOneByte(temp[i]);
 122   1        //} 
 123   1      }
 124          
 125          void dgusDealKeyValue (void)
 126          {
 127   1              uchar regNumber;
 128   1        //uchar len,cmd;
 129   1        ushort startAddr,i,j;
 130   1        if(DGUS_STA)
 131   1          {
 132   2            if(DGUS_RX_BUF[0]  == HEADH && DGUS_RX_BUF[1] == HEADL)//检验数据头
 133   2              {
 134   3                //len = DGUS_RX_BUF[2];
 135   3                //cmd = DGUS_RX_BUF[3];
 136   3                startAddr = (DGUS_RX_BUF[4]<<8)+DGUS_RX_BUF[5];
 137   3                regNumber = DGUS_RX_BUF[6];
 138   3                for(i = 0,j = 0;j < regNumber;i++,j+=2)
 139   3                {
 140   4                        dgusRx[i].regAddr = startAddr+i;
 141   4                        dgusRx[i].regValue = (DGUS_RX_BUF[7+j]<<8)+DGUS_RX_BUF[j+8];
 142   4                        
 143   4                }
 144   3              }
 145   2          }
 146   1      }
 147          
 148          void dgusClear(uchar i)
 149          {
 150   1        dgusRx[i].regAddr = 0;
 151   1        dgusRx[i].regValue = 0;
 152   1      }
 153          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    654    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     40      56
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
